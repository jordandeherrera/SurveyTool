load("~/R/survey.results.Rdata")
View(presults)
View(presults)
load("~/R/survey.results.Rdata")
View(presults)
load("~/R/survey.results.Rdata")
View(presults)
summary(presults)
t(summary(presults))
summary(presults)
summary(presults[,1:2])
view(presults)
View(presults)
unique(presults[,1])
presults.1 <- unique(presults[,1])
presults.1
?count
library(stringr)
dict <- setNames(nm=dict)
x <- ("Hello my name is Christopher. Some people call me Chris")
y <- ("Chris is an interesting person to be around")
z <- ("Because he plays sports and likes statistics")
lll <- tolower(list(x,y,z))
dict <- tolower(c("Chris", "Hell")
)
dict <- setNames(nm=dict)
lapply(dict, str_count, string=lll)
rm(dict)
rm(lll,x)
rm(y,z)
lapply(presults.1, str_count, string=presults[,1])
test <- lapply(presults.1, str_count, string=presults[,1])
test
df(test)
t(test)
table(test)
summary(test)
t(summary(test))
test
sapply(presults.1, str_count, presults)
sapply(presults.1, str_count, presults[,1])
sapply(presults[,1], str_count, presults.1)
?str_count
?str_count
lapply((sapply(presults.1, str_count, presults[,1]),sum)
lapply(sum,(sapply(presults.1, str_count, presults[,1]))
)
?lapply
??lapply
sapply(presults[,1], str_count, presults.1)
sapply(presults.1, str_count, presults)
sapply(presults.1, str_count, presults[1])
sapply(presults.1, str_count, presults[,1])
test <- data.frame(sapply(presults.1, str_count, presults[,1]))
test
View(test)
sapply(sum,test)
sapply(test, sum)
unique(presults[,1])
source('~/.active-rstudio-document')
sapply(presults.1.df,sum)
presults.1
data.frame(sapply(presults.1.df,sum))
source('~/.active-rstudio-document')
View(presults.1.sum)
source('~/.active-rstudio-document')
row.names(presults1.sum)
row.names(presults.1.sum)
View(presults.1.sum)
presults.1.sum
source('~/.active-rstudio-document')
presults.1.sum
View(presults.1.sum)
paste(colnames(presults[,1])) <- data.frame(presults.1.sum)
assign(paste(colnames(presults[,1]))) <- data.frame(presults.1.sum)
assign(paste(colnames(presults[,1])), presults.1.sum)
paste(colnames(presults[,1]))
colnames(presults[,1])
colnames(presults)
colnames(presults)[1]
assign(colnames(presults)[1], presults.1.sum)
View(`Projects are prioritized according to the organization's strategic priorities.  Each project is established to support achievement of these priorities.`)
load("~/R/survey.results.Rdata")
presults.1.sum
source('~/.active-rstudio-document')
View(presults.1.sum)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(presults.1.sum)
assign(colnames(presults.1.sum[1]),colnames(presults.1)[1])
View(presults.1.sum)
colnames(presults.1.sum)[1]
colnames(presults.1.sum[1]) <- colnames(presults.1)[1]
View(presults.1.sum)
colnames(presults.1.sum)[1] <- colnames(presults.1)[1]
colnames(presults.1)[1]
source('~/.active-rstudio-document')
colnames(presults.1)
presults.1
colnames(presults.1.sum)[1] <- colnames(presults)[1]
View(presults.1.sum)
source('~/.active-rstudio-document')
View(`Demographic. 1`)
View(`Demographic. 2`)
View(`Demographic. 3`)
source('~/.active-rstudio-document')
source('~/R/Demographics.R')
load("~/R/Demographics.R")
load("~/R/survey.results.Rdata")
source('~/R/Demographics.R')
View(Demographic.3)
load("~/R/survey.results.Rdata")
View(presults)
View(presults)
Qlist <-read.csv("R/Qlist.csv")
Qlist
View(Qlist)
library(sqldf)
View(Qlist)
library(googleVis)
source('~/R/Demographics.R')
renderPlot(plot(gvisColumnChart(Demographic.1)))
library(shiny)
renderPlot(plot(gvisColumnChart(Demographic.1)))
load("~/survey/counter.Rdata")
load("~/survey/Demographics.R")
load("~/survey/survey.results.Rdata")
View(presults)
Qlist <- read.csv("survey/Qlist.csv")
library(sqldf)
View(Qlist)
presults.columns
presults.columns <- colnames(presults)
sqldf(SELECT * FROM Qlist q LEFT JOIN presults.columns p ON q.Question = p.test)
fix(presults.columns)
fix(presults.columns)
presults.columns <- data.frame(Col.Names = colnames(presults))
sqldf(SELECT * FROM Qlist q LEFT JOIN presults.columns p ON q.Question = p.Col.Names)
sqldf(SELECT q.Category, p.Col.Names FROM Qlist q LEFT JOIN presults.columns p ON q.Question = p.Col.Names)
?sqldf
sqldf("SELECT q.Category, p.Col.Names FROM Qlist q LEFT JOIN presults.columns p ON q.Question = p.Col.Names")
sqldf("SELECT q.Category, p.Col.Names FROM Qlist")
sqldf("SELECT q.Category FROM Qlist")
sqldf("SELECT Category FROM Qlist")
PRESULTS.COLUMNS
presults.columns
Qlist[,1:2]
QCategory <- Qlist[,1:2]
colnames(presults) <- Qcategory[2]
colnames(presults) <- QCategory[2]
length(colnames(presults))
length(QCategory[2])
length(QCategory[,2])
pcategories <- presults[4:ncol(presults)]
pcategories
source('~/.active-rstudio-document')
colnames(pcategories) <- presults[,2]
colnames(pcategories) <- QCategory[,2]
QCategory[,2]
length(QCategory[,2])
length(colnames(pcategories))
colnames(pcategories)
pcategories
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pcategories
length(colnames(pcategories))
colnames(pcategories) <- QCategory[,2]
source('~/.active-rstudio-document')
pcategories
source('~/.active-rstudio-document')
QResponse
View(Qlist)
source('~/.active-rstudio-document')
QCategory
source('~/.active-rstudio-document')
QCategory
sapply(QResponse, str_count, pcategories)
sapply(pcategories, str_count, QResponse)
pcategories
source('~/.active-rstudio-document')
pcategories
View(pcategories)
unique(pcategories[,4:ncol(pcategories)])
as.vector(pcategories[,4:ncol(pcategories)])
unique(as.vector(pcategories[,4:ncol(pcategories)]))
Qlist[,4]
Qlist[,5]
Qlist[4,]
Qlist[4,4:ncol(Qlist)]
as.vector(Qlist[4,4:ncol(Qlist)])
unique(as.vector(Qlist[4,4:ncol(Qlist)]))
unique(as.vector(pcategories[,4:ncol(pcategories)]))
pcategories
MaturityModelValues <- data.frame(Category=unique(as.vector(pcategories[,4:ncol(pcategories)])),Value=0)
MaturityModelValues
MaturityModelValues[1,2] = 1
MaturityModelValues[2,2] = 2
MaturityModelValues[2,2] = NA
MaturityModelValues[3,2] = 4
MaturityModelValues[4,2] = 2
MaturityModelValues[5,2] = 3
MaturityModelValues[6,2] = 5
MaturityModelValues[7,2] = 0
MaturityModelValues
sum(MaturityModelValues[,2]
)
sum(MaturityModelValues[!is.na(MaturityModelValues$Value),2])
average(MaturityModelValues[!is.na(MaturityModelValues$Value),2])
avg(MaturityModelValues[!is.na(MaturityModelValues$Value),2])
mean(MaturityModelValues[!is.na(MaturityModelValues$Value),2])
save(MaturityModelValues, file="survey/maturity.model.values.Rdata")
save(MaturityModelValues, file="maturity.model.values.Rdata")
source('~/.active-rstudio-document')
rm(MaturityModelValues)
source('~/.active-rstudio-document')
View(MaturityModelValues)
as.matrix(pcategories)
pcategories.matrix <- as.matrix(pcategories)
pcategories.matrix
View(MaturityModelValues)
summary(pcategories)
t(summary(categories))
t(summary(categories))
t(summary(pcategories))
pcategories
merge(pcategories, MaturityModelValues, by.pcategories = 'Risk Management', by.MaturityModelValues = 'Cateogry')
merge(pcategories, MaturityModelValues, by.pcategories = 'Risk Management', by.MaturityModelValues = 'Cateogry')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pcategories[1,4]
pcategories
source('~/.active-rstudio-document')
pcategories
unique(colnames(pcategories))
View(pcategories)
mean(!is.na(pcategories$ProgramGovernance))
mean(!is.na(as.numeric(pcategories$ProgramGovernance)))
summary(pcategories)
summary(pcategories[1:3])
summary(pcategories[,1:3])
summary(pcategories[,4:ncol(pcategories)])
table(summary(pcategories[,4:ncol(pcategories)]))
data.frame(summary(pcategories[,4:ncol(pcategories)]))
pcategories
View(pcategories)
data.frame(Sector=unique(pcategories[,2]), Categories=unique(colnames(pcategories[,4:ncol(pcategories)])))
data.frame(Sector=unique(pcategories[,2]), Categories=rep(unique(colnames(pcategories[,4:ncol(pcategories)])), 1:length(unique(pcategories[,2])))
)
data.frame(Sector=unique(pcategories[,2]), Category=rep(unique(colnames(pcategories[,4:ncol(pcategories)])), 1:length(unique(pcategories[,2]))), Score=0)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
load("~/survey/survey.results.Rdata")
source('~/.active-rstudio-document')
View(pcategories.score)
View(pcategories)
View(pcategories.score)
pcategories[,2]=="Financial Services"
pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"]
as.vector(pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"])
mean(!is.na(as.vector(pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"])))
mean(!is.na(as.numeric((as.vector(pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"])))
)
)
mean(!is.na(as.vector(pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"])))
mean(!is.na(as.vector(as.numeric(pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"])))
)
mean(!is.na(as.vector(as.numeric(pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"])))
)
as.numeric(pcategories[,5])
!is.na(as.numeric(pcategories[,5]))
mean(!is.na(as.numeric(pcategories[,5])))
tmp.vector <- as.vector(as.numeric(pcategories[pcategories[,2]=="Financial Services",colnames(pcategories)=="Program Governance"]))
mean(tmp.vector[!is.na(tmp.vector)])
tmp.vector
View(QCategory)
View(pcategories.score)
QCategory
unique.sectors <- unique(pcategories.score$Sector)
unique.categories <- unique(pcategories.score$Category)
for (i in 1:length(unique.sectors)){
for (j in 1:length(unique.categories)){
tmp.vector <- as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[i],colnames(pcategories)==unique.categories[j]]))
pcategories.score[pcategories.score$Sector==unique.sectors[i] & pcategories.score$Category==unique.categories[j],3] <- mean(tmp.vector[!is.na(tmp.vector)])
}}
pcategories.score
unique.sectors <- unique(pcategories.score$Sector)
unique.categories <- unique(pcategories.score$Category)
for (i in 1:length(unique.sectors)){
for (j in 1:length(unique.categories)){
tmp.vector <- as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[i],colnames(pcategories)==unique.categories[j]]))
pcategories.score[pcategories.score$Sector==unique.sectors[i] & pcategories.score$Category==unique.categories[j],3] <- round(mean(tmp.vector[!is.na(tmp.vector)]),2)
}}
View(pcategories.score)
pcategories.score[complete.cases(pcategories.score)]
pcategories.score[complete.cases(pcategories.score[,3])]
pcategories.score[complete.cases(pcategories.score),]
source('~/.active-rstudio-document')
pcategories.score
View(pcategories.score)
library(googleVis)
library(shiny)
plot(gvishColumnChart(pcategories.score))
plot(gvisColumnChart(pcategories.score))
View(pcategories)
nrow(pcategories)
pcategories.score
pcategories
#Create a score data frame for the last input
pcategories.score.individual <- data.frame(Category=unique(colnames(pcategories[,4:ncol(pcategories)])), Score=0)
pcategories.score.individual
nrow(pcategories)
#Create a score data frame for the last input
pcategories.score.individual <- data.frame(Category=unique(colnames(pcategories[,4:ncol(pcategories)])), Score=0)
#Replace pcategories score with means from survey results
unique.categories <- unique(pcategories.score.individual$Category)
for (j in 1:length(unique.categories)){
tmp.vector <- as.vector(as.numeric(nrow(pcategories),colnames(pcategories)==unique.categories[j]]))
pcategories.score.individual[pcategories.score.individual$Category==unique.categories[j],2] <- round(mean(tmp.vector[!is.na(tmp.vector)]),2)
}
pcategories.score.individual <- pcategories.score.individual[complete.cases(pcategories.score.individual),]
#Create a score data frame for the last input
pcategories.score.individual <- data.frame(Category=unique(colnames(pcategories[,4:ncol(pcategories)])), Score=0)
#Replace pcategories score with means from survey results
unique.categories <- unique(pcategories.score.individual$Category)
for (j in 1:length(unique.categories)){
tmp.vector <- as.vector(as.numeric(pcategories[nrow(pcategories),colnames(pcategories)==unique.categories[j]]))
pcategories.score.individual[pcategories.score.individual$Category==unique.categories[j],2] <- round(mean(tmp.vector[!is.na(tmp.vector)]),2)
}
pcategories.score.individual <- pcategories.score.individual[complete.cases(pcategories.score.individual),]
View(pcategories.score.individual)
View(pcategories.score.individual)
pcategories[10,4:13]
#Create a score data frame for the last input
pcategories.score.individual <- data.frame(Category=unique(colnames(pcategories[,4:ncol(pcategories)])), Score=0)
#Replace pcategories score with means from survey results
unique.categories <- unique(pcategories.score.individual$Category)
for (j in 1:length(unique.categories)){
tmp.vector <- as.vector(as.numeric(pcategories[nrow(pcategories),colnames(pcategories)==unique.categories[j]]))
pcategories.score.individual[pcategories.score.individual$Category==unique.categories[j],2] <- round(mean(tmp.vector[!is.na(tmp.vector)]),2)
}
pcategories.score.individual <- pcategories.score.individual[complete.cases(pcategories.score.individual),]
View(pcategories.score.individual)
quit()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(MaturityModelValues)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(presults)
View(presults)
View(pcategories.score)
View(presults)
View(pcategories)
View(pcategories[pcategories[,2] == "Financial Services",])
View(pcategories.score)
View(pcategories.score[pcategories.score[,1]=="Financial Services",])
QCategory
unique.categories
pcategories.score
pcategories
View(pcategories)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
tmp.vector
View(tmp.vector)
unique.sectors
as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories.score)==unique.categories[3]]))
as.numeric(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories.score)==unique.categories[3]])
unique.sectors[1]
unique.categories[3]
unique.categories[2]
pcategories[pcategories[,2]==unique.sectors[1],]
pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[j]]
pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]]
as.vector(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]])
as.numeric(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]])
as.numeric(as.vector(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]])))
as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]])))
as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]]))))
as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]]))))
as.numeric(pcategories[pcategories[,2]==unique.sectors[1],colnames(pcategories)==unique.categories[2]])
)
as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[i],colnames(pcategories)==unique.categories[j]]))
mean(as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[i],colnames(pcategories)==unique.categories[j]])))
pcategories
unique.sectors
mean(as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[2],colnames(pcategories)==unique.categories[2]])))
as.vector(as.numeric(pcategories[pcategories[,2]==unique.sectors[2],colnames(pcategories)==unique.categories[2]]))
pcategories.score
source('~/.active-rstudio-document')
pcategories.score
source('~/.active-rstudio-document')
pcategories.score
source('~/.active-rstudio-document')
fix(unique.categories)
fix(unique.sectors)
View(unique.categories)
pcategories.score <- data.frame(Sector=rep(unique.sectors, 1:length(unique.categories)), Category=rep(unique.categories, 1:length(unique.sectors)), Score=0)
pcategories.score
1:2
c(1:2,1:3)
pcategories.score <- data.frame(Sector=rep(unique.sectors, 1:length(unique.categories)), Category=unique.categories), Score=0)
pcategories.score <- data.frame(Sector=rep(unique.sectors, 1:length(unique.categories)), Category=unique.categories), Score=0))
pcategories.score <- data.frame(Sector=rep(unique.sectors, 1:length(unique.categories)), Category=unique.categories, Score=0)
pcategories.score
pcategories.score <- data.frame(Sector=rep(unique.sectors, length(unique.categories)), Category=unique.categories, Score=0)
pcategories.score
pcategories.score <- data.frame(Sector=unique.sectors, Category=rep(unique.categories, length(unique.sectors)), Score=0)
pcategories.score
pcategories.score <- data.frame(Sector=unique.sectors, Category=rep(unique.categories, length(unique.sectors)), Score=0)
rep(unique.categories, length(unique.sectors)
)
score.categories <- rep(unique.categories, length(unique.sectors))
score.categories <- score.categories[order(score.categories[1]),]
summary(score.categories)
score.categories
sort(score.categories)
score.categories <- sort(score.categories)
score.categories
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pcategories.score
source('~/.active-rstudio-document')
pcategories.score
pcategories.score.individual
pcategories
source('~/.active-rstudio-document')
pcategories.score.marketcap
unique.marketcap
pcategories.score.marketcap <- data.frame(Sector=unique.marketcap, Category=sort(rep(unique.categories, length(unique.marketcap))), Score=0)
pcategories.score.marketcap
source('~/.active-rstudio-document')
pcategories.score.marketcap
source('~/.active-rstudio-document')
pcategories.score.marketcap
library(reshape)
x <- melt(pcategories.score.marketcap)
x
dcast(x,value~MarketCap)
cast(x,value~MarketCap)
cast(x,MarketCap~value)
cast(x,MarketCap~Category+Value)
cast(x,MarketCap~Category+value)
cast(x,MarketCap~Category)
cast(melt(pcategories.score.marketcap,MarketCap~Category))
cast(melt(pcategories.score.marketcap),MarketCap~Category)
options(help_type = "text")
?load
??load
?dbconnect
load(RMySQL)
load(knitr)
library("knitr", lib.loc="/usr/local/lib/R/site-library")
library("caret")
library(dplyr)
library(dplyr)
View(QCategory)
